unit LColorListView_u;

interface

uses
  Windows, Classes, SysUtils, StdCtrls, ExtCtrls, Graphics, System.UITypes, Vcl.Grids, ComCtrls, CommCtrl, Controls,
  Messages;

type
  TGetCellColor = procedure (Sender: TObject; ACol, ARow: LongInt; var Color: TColor) of object;
  TGetCellFontProp = procedure (Sender: TObject; ACol, ARow: LongInt; var Color: TColor; var Style: TFontStyles) of object;
  TDrawCellBGEvent = procedure (Sender: TObject; ARect: TRect; AColor: TColor; ACol, ARow: Longint; AState: TGridDrawState) of object;
  TLColorStringGrid = class(TStringGrid)
  protected
    procedure WMCtlColorScrollbar(var Message: TWMCtlColorScrollbar); message WM_CTLCOLORSCROLLBAR;
    procedure DrawCellBackground(const ARect: TRect; AColor: TColor; AState: TGridDrawState; ACol, ARow: Integer); override;
    procedure DrawCell(ACol, ARow: Longint; ARect: TRect; AState: TGridDrawState); override;
    procedure MouseUp(Button: TMouseButton; Shift: TShiftState; X, Y: Integer); override;
  published
    property Dark: Boolean read FDark write SetDark;
    property OnGetCellColor: TGetCellColor read FGetCellColor write FGetCellColor;
    property OnGetCellFontProp: TGetCellFontProp read FGetCellFontProp write FGetCellFontProp;
    property OnDrawCellBG: TDrawCellBGEvent read FOnDrawCellBG write FOnDrawCellBG;
  end;

  TListViewTextColorEvent = procedure (Sender: TObject; Item: TListItem; SubItem: Integer; var Color, BkColor: TColor) of object;
  TLColorListView = class(TListView)
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    property ItemHeight: Integer read FItemHeight write SetItemHeight;
  published
    property OnGetTextColor: TListViewTextColorEvent read FGetTextColor write FGetTextColor;
  end;

function ToPretty(S: String): String;
function ColorToString(Color: TColor): string;
function StringToColor(const S: string): TColor;
